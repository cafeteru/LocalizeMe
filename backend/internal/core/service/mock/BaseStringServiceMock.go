// Code generated by MockGen. DO NOT EDIT.
// Source: internal/core/service/BaseStringService.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	domain "gitlab.com/HP-SCDS/Observatorio/2021-2022/localizeme/uniovi-localizeme/internal/core/domain"
)

// MockBaseStringService is a mock of BaseStringService interface.
type MockBaseStringService struct {
	ctrl     *gomock.Controller
	recorder *MockBaseStringServiceMockRecorder
}

// MockBaseStringServiceMockRecorder is the mock recorder for MockBaseStringService.
type MockBaseStringServiceMockRecorder struct {
	mock *MockBaseStringService
}

// NewMockBaseStringService creates a new mock instance.
func NewMockBaseStringService(ctrl *gomock.Controller) *MockBaseStringService {
	mock := &MockBaseStringService{ctrl: ctrl}
	mock.recorder = &MockBaseStringServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBaseStringService) EXPECT() *MockBaseStringServiceMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockBaseStringService) Create(request domain.BaseString) (domain.BaseString, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", request)
	ret0, _ := ret[0].(domain.BaseString)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockBaseStringServiceMockRecorder) Create(request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockBaseStringService)(nil).Create), request)
}
